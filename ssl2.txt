@Bean
public MongoClient createMongoClient() {
    try {
        String connectionString = "mongodb://.../?tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false";
        
        // Load the AWS DocumentDB CA certificate (available from AWS)
        CertificateFactory factory = CertificateFactory.getInstance("X.509");
        InputStream is = getClass().getClassLoader().getResourceAsStream(cert);
        Certificate cert = factory.generateCertificate(is);
        
        // Create a KeyStore containing the trusted certificate
        KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
        keyStore.load(null, null);
        keyStore.setCertificateEntry("documentdb", cert);
        
        // Create TrustManager that trusts the KeyStore contents
        TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
        tmf.init(keyStore);
        
        // Create SSLContext with the TrustManager
        SSLContext sslContext = SSLContext.getInstance("TLS");
        sslContext.init(null, tmf.getTrustManagers(), null);
        
        // Configure MongoClient with SSL
        MongoClientSettings settings = MongoClientSettings.builder()
            .applyConnectionString(new ConnectionString(connectionString))
            .applyToSslSettings(builder -> builder
                .enabled(true)
                .context(sslContext)
                .invalidHostNameAllowed(true)) // Important for DocumentDB
            .build();
            
        return MongoClients.create(settings);
    } catch (Exception e) {
        throw new RuntimeException("Failed to create MongoClient", e);
    }
}