import org.apache.parquet.io.InputFile;
import org.apache.parquet.io.SeekableInputStream;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.channels.Channels;

public class LocalInputFile implements InputFile {
    private final File file;

    public LocalInputFile(File file) {
        this.file = file;
    }

    @Override
    public long getLength() throws IOException {
        return file.length();
    }

    @Override
    public SeekableInputStream newStream() throws IOException {
        return new SeekableInputStream() {
            private final RandomAccessFile raf = new RandomAccessFile(file, "r");

            @Override
            public long getPos() throws IOException {
                return raf.getFilePointer();
            }

            @Override
            public void seek(long newPos) throws IOException {
                raf.seek(newPos);
            }

            @Override
            public int read() throws IOException {
                return raf.read();
            }

            @Override
            public int read(byte[] b, int off, int len) throws IOException {
                return raf.read(b, off, len);
            }

            @Override
            public void close() throws IOException {
                raf.close();
            }
        };
    }
}